109d108
<         use model_storm_module, only: set_holland_2008_fields
117c116
<         ! use data_storm_module, only: set_data_storm => set_storm
---
>         use data_storm_module, only: set_data_storm => set_storm
118a118
>         use data_storm_module, only: set_wrf_storm_fields
151a152,155
>                 case(3)
>                     wind_drag => mk_wind_drag
>                 case(4)
>                     wind_drag => mk_nolimit_wind_drag
184c188
<             read(unit, "(i1)") storm_specification_type
---
>             read(unit, "(i2)") storm_specification_type
201,202c205
<                     storm_specification_type <= 3               &
<                 .or. storm_specification_type == 8) then
---
>                     storm_specification_type <=3) then
206,207d208
<                     case(8) ! Holland 2008 model
<                         set_model_fields => set_holland_2008_fields
234a236,237
>                     case(-1) ! WRF Data
>                         set_data_fields => set_wrf_storm_fields
235a239,241
>                 call set_data_storm(storm_file_path,data_storm,         &
>                                     storm_specification_type, log_unit)
>                 print *, "Storm is set by WRF Output !!!"
381a388,432
>     ! ========================
>     !  Mitsuyasu & Kusaba Wind Drag Coefficient
>     ! ========================
>     ! For reference see:
>     !  Mitsuyasu, H., and Kusaba, T (1984). "Drag coefficient over water surface under the
>     !  action of strong wind" Natural Disaster Science 6(2), 43-50. 
>     real(kind=8) pure function mk_wind_drag(wind_speed, theta) result(wind_drag)
>     
>         implicit none
>         
>         ! Input
>         real(kind=8), intent(in) :: wind_speed, theta
>   
>         if (wind_speed < 8d0) then ! 0 <= W < 8
>             wind_drag = (1.290d0 - 0.024d0 * wind_speed) * 1d-3
>         else if (wind_speed < 30d0) then ! 8 <= W < 30
>             wind_drag = (0.581d0 + 0.063d0 * wind_speed) * 1d-3
>         else ! W >= 30
>             wind_drag = (0.581d0 + 0.063d0 * 30d0) * 1d-3
>         endif
>     
>     end function mk_wind_drag
> 
>     ! ========================
>     !  Mitsuyasu & Kusaba No-Limit Wind Drag Coefficient
>     ! ========================
>     ! Same as above but without the upper limit 
>     ! For reference see:
>     !  Mitsuyasu, H., and Kusaba, T (1984). "Drag coefficient over water surface under the
>     !  action of strong wind" Natural Disaster Science 6(2), 43-50. 
>     real(kind=8) pure function mk_nolimit_wind_drag(wind_speed, theta) result(wind_drag)
>     
>         implicit none
>         
>         ! Input
>         real(kind=8), intent(in) :: wind_speed, theta
>   
>         if (wind_speed < 8d0) then
>             wind_drag = (1.290d0 - 0.024d0 * wind_speed) * 1d-3
>         else
>             wind_drag = (0.581d0 + 0.063d0 * wind_speed) * 1d-3
>         endif
>     
>     end function mk_nolimit_wind_drag
> 
435c486
<         else if (storm_specification_type < 0) then
---
>         else if (storm_specification_type < 0 .and. storm_specification_type>-1) then
